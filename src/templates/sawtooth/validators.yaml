# kubetpl:syntax:go-template
{{$peering:= .sawtooth.dynamicPeering}}
apiVersion: v1
kind: Service
metadata:
  name: {{.sawtooth.networkName}}-rest-api
  labels:
    app: {{.sawtooth.networkName}}-validator
spec:
  type: LoadBalancer
  ports:
  - port: 8080
    protocol: TCP 
    targetPort: 8080
  selector:
    app: {{.sawtooth.networkName}}-validator
---

apiVersion: v1
kind: Service
metadata:
  name: {{.sawtooth.networkName}}-validator
  labels:
    app: {{.sawtooth.networkName}}-validator
spec:
  ports:
  - port: 8800
    protocol: TCP 
    targetPort: 8800
    name: sawnet
  clusterIP: None
  selector:
    app: {{.sawtooth.networkName}}-validator
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{.sawtooth.networkName}}-validator
spec:
  selector:
    matchLabels:
      app: {{.sawtooth.networkName}}-validator
  serviceName: "{{.sawtooth.networkName}}-validator"
  podManagementPolicy: Parallel
  replicas: {{.sawtooth.replicas}}
  template:
    metadata:
      labels:
        app: {{.sawtooth.networkName}}-validator
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
      - name: {{.sawtooth.networkName}}-validator
        image: {{.sources.imageRepository}}/sawtooth-validator:{{.sources.version}}
        command: ["bash", "-c" ]
        args:
          - |
            sleep 30;
            apt update; apt install host -y;
            for ip in `host {{.sawtooth.networkName}}-validator|awk '{print $NF}'`; do
              if [ "${ENDPOINT_ADDRESS}" != "${ip}" ]; then
                export SEEDS="{{if ($peering) }}-s{{else}}-p{{end}} tcp://$ip:8800 $SEEDS";
              fi
            done;
            sawtooth-validator -v --scheduler {{.sawtooth.scheduler}} \
              --endpoint tcp://${ENDPOINT_ADDRESS}:8800 \
              --bind component:tcp://0.0.0.0:4004 \
              --bind network:tcp://0.0.0.0:8800 \
              -P {{if ($peering)}}dynamic{{else}}static{{end}} \
              {{ range .sawtooth.externalSeeds }}{{if ($peering) }}-s{{else}}-p{{end}} tcp://{{.}} {{end}} \
              ${SEEDS} \
              --network-auth trust \
              --minimum-peer-connectivity 5 \
              --maximum-peer-connectivity 64 \
              --opentsdb-url http://influxdb:8086 \
              --opentsdb-db metrics ;
        volumeMounts:
        - mountPath: "/etc/sawtooth"
          name: sawtooth
        env:
          - name: ENDPOINT_ADDRESS
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        ports:
          - containerPort: 4004
            name: sawcomp
          - containerPort: 8800
            name: sawnet
          - containerPort: 5050
            name: consensus
      - name: settings-tp
        image: {{.sources.imageRepository}}/sawtooth-settings-tp:{{.sources.version}}
        command: [ "bash", "-c"]
        args: 
          - "settings-tp -v --connect tcp://localhost:4004"
      - name: identity-tp
        image: {{.sources.imageRepository}}/sawtooth-identity-tp:{{.sources.version}}
        command: [ "bash", "-c"]
        args: 
          - "identity-tp -v --connect tcp://localhost:4004"
      - name: block-info-tp
        image: {{.sources.imageRepository}}/sawtooth-block-info-tp:{{.sources.version}}
        command: [ "bash", "-c"]
        args: 
          - "block-info-tp -v --connect tcp://localhost:4004"
      {{ if .sawtooth.poet.enabled }}
      - name: poet-validator-registry-tp
        image: {{.sources.imageRepository}}/sawtooth-poet-validator-registry-tp:{{.sources.version}}
        command: [ "bash", "-c"]
        args: 
          - "poet-validator-registry-tp -v --connect tcp://localhost:4004"
      {{ end }}
      {{ if .sawtooth.smallbank.enabled }}
      - name: smallbank-tp
        image: {{.sources.imageRepository}}/sawtooth-smallbank-tp-go:{{.sources.version}}
        command: [ "bash", "-c"]
        args: 
          - "smallbank-tp-go -v --connect tcp://localhost:4004"
      {{ end }}
      {{ if .sawtooth.rbac.enabled }} 
      - name: rbac-tp
        image: {{.sources.imageRepository}}/rbac-tp-production:{{.sources.rbacVersion}}
        command: [ "bash", "-c"]
        args: 
          - "bin/rbac-tp -v tcp://localhost:4004"
      {{ end }}
      {{ if .sawtooth.xo.enabled }}
      - name: xo-tp
        image: {{.sources.imageRepository}}/sawtooth-xo-tp-go:{{.sources.version}}
        command: [ "bash", "-c"]
        args: 
          - "xo-tp-go -v --connect tcp://localhost:4004"
      {{ end }}
      {{ if .sawtooth.simple.enabled }}
      - name: simple-tp-python
        image: {{.sources.imageRepository}}/simple-tp-python:{{.sources.simpleVersion}}
        command: [ "bash", "-c"]
        args: 
          - |  
            ( set -x ; apt update;
            apt install git -y
            cd /; 
            git clone https://github.com/catenasys/caliper; 
            cd caliper; 
            git fetch --all;
            git checkout sawtooth-testing ; 
            cd /; 
            mv caliper project; 
            /project/caliper/src/contract/sawtooth/simple/simple_python/simple-tp-python -vv -C tcp://localhost:4004 )
      {{ end }}
      - name: rest-api
        image: {{.sources.imageRepository}}/sawtooth-rest-api:{{.sources.version}}
        command: [ "bash", "-c"]
        args: 
          - "sawtooth-rest-api -v --bind 0.0.0.0:8080 --connect tcp://localhost:4004"
        ports:
          - containerPort: 8080
            name: sawrest
      initContainers:
      - name: install
        image: {{.sources.imageRepository}}/sawtooth-validator:{{.sources.version}}
        command: [ "bash", "-xc" ]
        args: 
          - |
            if [ ! -r /etc/sawtooth/initialized ]; then
              set -x
              mkdir -p /etc/sawtooth/keys;
              mkdir -p /etc/sawtooth/data;
              rm -rf /var/lib/sawtooth;
              ln -s /etc/sawtooth/data /var/lib/sawtooth
              sawadm keygen --force;
              sawtooth keygen --force ;
              {{ if .sawtooth.genesis.enabled }}
              if [ "${POD_NAME}" = "{{.sawtooth.networkName}}-validator-0" ]; then
                mkdir -p /etc/sawtooth/genesis;
                apt update
                apt install curl -y
                curl https://raw.githubusercontent.com/hyperledger/sawtooth-core/5094a9a1a7d086c14704e7055cfad9de77d1e6aa/consensus/poet/simulator/packaging/simulator_rk_pub.pem > /etc/sawtooth/keys/simulator_rk_pub.pem
                sawset genesis -k /etc/sawtooth/keys/validator.priv -o /etc/sawtooth/genesis/genesis.batch ;
                sawset proposal create -k /etc/sawtooth/keys/validator.priv {{ if .sawtooth.poet.enabled }} \
                  sawtooth.consensus.algorithm=poet \
                  sawtooth.poet.report_public_key_pem="$(cat /etc/sawtooth/keys/simulator_rk_pub.pem)" \
                  sawtooth.poet.valid_enclave_measurements=$(poet enclave --enclave-module {{.sawtooth.poet.enclaveModule}} measurement) \
                  sawtooth.poet.valid_enclave_basenames=$(poet enclave --enclave-module {{.sawtooth.poet.enclaveModule}} basename) \
                  sawtooth.validator.batch_injectors=block_info \
                  -o /etc/sawtooth/genesis/config.batch; {{ else }} \
                  sawtooth.validator.batch_injectors=block_info -o /etc/sawtooth/genesis/config.batch; {{ end }}
                {{ if .sawtooth.poet.enabled }}
                poet registration create -k /etc/sawtooth/keys/validator.priv \
                  --enclave-module simulator \
                  -o /etc/sawtooth/genesis/poet.batch
                sawset proposal create -k /etc/sawtooth/keys/validator.priv \
                  sawtooth.poet.target_wait_time={{.sawtooth.poet.targetWaitTime}} \
                  sawtooth.poet.initial_wait_time={{.sawtooth.poet.initialWaitTime}} \
                  sawtooth.publisher.max_batches_per_block={{.sawtooth.poet.maxBatchesPerBlock}} \
                  -o /etc/sawtooth/genesis/poet-settings.batch
                {{ end }}
                
                sawadm genesis /etc/sawtooth/genesis/genesis.batch \
                  /etc/sawtooth/genesis/config.batch {{ if .sawtooth.poet.enabled }} \
                  /etc/sawtooth/genesis/poet.batch \
                  /etc/sawtooth/genesis/poet-settings.batch
                  {{ end }}
              else
                sleep 60
              fi
              {{ end }}
              echo 'data_dir = "/etc/sawtooth/data"' > /etc/sawtooth/path.toml
              touch /etc/sawtooth/initialized;
            fi
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        volumeMounts:
        - mountPath: "/etc/sawtooth"
          name: sawtooth
  volumeClaimTemplates:
  - metadata:
      name: sawtooth
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "fast-keep"
      resources:
        requests:
          storage: 10Gi
---

