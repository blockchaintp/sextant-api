# kubetpl:syntax:go-template
{{$peering:= .sawtooth.dynamicPeering}}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{.sawtooth.networkName}}-validator
  namespace: {{.sawtooth.namespace}}
spec:
#  replicas: 1
#  serviceName: {{.sawtooth.networkName}}-validator
  selector:
    matchLabels:
      app: {{.sawtooth.networkName}}-validator
  template:
    metadata:
      labels:
        app: {{.sawtooth.networkName}}-validator
    spec:
      serviceAccountName: {{.sawtooth.networkName}}-sa
      {{if .affinity.enabled}}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{.sawtooth.networkName}}-validator
      {{ end }}
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      {{ if .imagePullSecrets }}
      imagePullSecrets: 
      {{range .imagePullSecrets.value }}
        - name: {{ . }}
      {{ end }}
      {{ end }}
      containers:
        {{ if eq .sawtooth.consensus 400 }}
        - name: pbft-engine
          image: {{.images.pbft_engine}}
          command: [ "bash", "-xc"]
          args:
          - "pbft-engine -v -C tcp://${POD_IP}:5050"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
        {{ else if eq .sawtooth.consensus 300 }}
        - name: raft-engine
          image: {{.images.raft_engine}}
          command: [ "bash", "-xc"]
          args:
          - "raft-engine -v -C tcp://${POD_IP}:5050"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
        {{ else if eq .sawtooth.consensus 200 }}
        - name: poet-engine
          image: {{.images.poet_engine}}
          command: [ "bash", "-xc"]
          args:
          - "poet-engine -v -C tcp://${POD_IP}:5050 --component tcp://${POD_IP}:4004"
          volumeMounts:
            - mountPath: "/etc/sawtooth"
              name: sawtooth-etc
            - mountPath: "/var/lib/sawtooth"
              name: sawtooth-data
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
        - name: poet-validator-registry-tp
          image: {{.images.poet_validator_registry_tp}}
          command: [ "bash", "-xc"]
          args: 
          - "poet-validator-registry-tp -v --connect tcp://${POD_IP}:4004"
          resources:
            limits:
              cpu: "250m"
            requests:
              cpu: "50m"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
        {{ else }}
        - name: devmode-engine
          image: {{.images.devmode_engine}}
          command: [ "bash", "-xc"]
          args:
          - "devmode-engine-rust -v -C tcp://${POD_IP}:5050"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
        {{ end }}
        - name: settings-tp
          image: {{.images.settings_tp}}
          command: [ "bash", "-xc"]
          args: 
          - "settings-tp -v --connect tcp://${POD_IP}:4004"
          resources:
            limits:
              cpu: "250m"
            requests:
              cpu: "50m"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
        # - name: block-info-tp
        #   image: {{.images.block_info_tp}}
        #   command: [ "bash", "-xc"]
        #   args: 
        #   - "block-info-tp -v -C tcp://${POD_IP}:4004"
        #   resources:
        #     limits:
        #       cpu: "250m"
        #     requests:
        #       cpu: "50m"
        #   env:
        #     - name: POD_IP
        #       valueFrom:
        #         fieldRef:
        #           fieldPath: status.podIP
        - name: intkey-tp
          image: {{.images.intkey_tp}}
          command: [ "bash", "-xc"]
          args: 
          - "intkey-tp-go -v --connect tcp://${POD_IP}:4004"
          resources:
            limits:
              cpu: "250m"
            requests:
              cpu: "50m"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
        {{ if .sawtooth.permissioned }}
        - name: identity-tp
          image: {{.images.identity_tp}}
          command: [ "bash", "-xc" ]
          args: 
          - "identity-tp -v -connect tcp://${POD_IP}:4004"
          resources:
            limits:
              cpu: "250m"
            requests:
              cpu: "50m"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
        {{ end }}
        {{ if .sawtooth.seth.enabled }}
        - name: seth-tp
          image: {{.images.seth_tp}}
          command: [ "bash", "-xc"]
          args: 
          - "seth-tp -v --connect tcp://${POD_IP}:4004"
          resources:
            limits:
              cpu: "250m"
            requests:
              cpu: "50m"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
        - name: seth-rpc
          image: {{.images.seth_rpc}}
          command: [ "bash", "-xc"]
          args: 
          - "seth-rpc -v --bind 0.0.0.0:3030 --connect tcp://${POD_IP}:4004 "
          ports:
            - containerPort: 3030
              name: seth-rpc
          resources:
            limits:
              cpu: "250m"
            requests:
              cpu: "50m"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
        {{ end }}
        {{ if .sawtooth.smallbank.enabled }}
        - name: smallbank-tp
          image: {{.images.smallbank_tp}}
          command: [ "bash", "-xc"]
          args: 
          - "smallbank-tp-go -v --connect tcp://${POD_IP}:4004"
          resources:
            limits:
              cpu: "250m"
            requests:
              cpu: "50m"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
        {{ end }}
        {{ if .sawtooth.xo.enabled }}
        - name: xo-tp
          image: {{.images.xo_tp}}
          command: [ "bash", "-xc"]
          args: 
          - "xo-tp-go -v --connect tcp://${POD_IP}:4004"
          resources:
            limits:
              cpu: "250m"
            requests:
              cpu: "50m"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
        - name: xo-demo
          image: {{.images.xo_demo}}
          ports:
            - containerPort: 80
              name: xo-demo
          resources:
            limits:
              cpu: "250m"
            requests:
              cpu: "50m"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
        {{ end }}
        {{range .sawtooth.customTPs}}
        - name: {{.name}}
          image: {{.image}}
          {{if .command}}command: [ {{ range .command }}"{{.}}",{{end}} ]{{end}}
          {{if .args}}args: [ {{ range .args}}"{{.}}", {{end}} ]{{end}}
        {{end}}
        - name: rest-api
          image: {{.images.rest_api}}
          command: [ "bash", "-xc"]
          args: 
          - "sawtooth-rest-api -v --bind 0.0.0.0:8080 --connect tcp://${POD_IP}:4004"
          ports:
            - containerPort: 8080
              name: sawrest
          resources:
            limits:
              cpu: "250m"
            requests:
              cpu: "50m"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
        - name: monitor
          image: {{.images.shell}}
          command: [ "bash", "-xc"]
          args:
            - "sawtooth keygen && /usr/local/bin/heartbeat_loop.sh ${POD_NAME}"
          volumeMounts:
            - mountPath: "/etc/sawtooth"
              name: sawtooth-etc
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          resources:
            limits:
              cpu: "100m"
            requests:
              cpu: "100m"            
        - name: validator
          image: {{.images.validator}}
          command: ["bash", "-xc" ]
          args:
            - |
              source /usr/local/bin/validator_env.sh {{.sawtooth.namespace}} {{.sawtooth.networkName}}
              sawtooth-validator -v --scheduler {{.sawtooth.scheduler}} \
                --endpoint tcp://${POD_IP}:8800 \
                --bind component:tcp://eth0:4004 \
                --bind consensus:tcp://eth0:5050 \
                --bind network:tcp://eth0:8800 \
                --peering {{if ($peering)}}dynamic{{else}}static{{end}} \
                {{ range .sawtooth.externalSeeds }}{{if ($peering) }}--seeds{{else}}--peers{{end}} tcp://{{.}} {{end}} \
                {{if ($peering)}}${SEEDS}{{else}}${PEERS}{{end}} 
          volumeMounts:
            - mountPath: "/etc/sawtooth"
              name: sawtooth-etc
            - mountPath: "/var/lib/sawtooth"
              name: sawtooth-data
          # livenessProbe:
          #   exec:
          #     command:
          #       - /usr/local/bin/liveness_probe.sh
          #   initialDelaySeconds: 120
          #   periodSeconds: 60
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - containerPort: 4004
              name: sawcomp
            - containerPort: 8800
              hostPort: 8800
              name: sawnet
            - containerPort: 5050
              name: consensus
      initContainers:
        - name: setup
          image: {{.images.validator}}
          volumeMounts:
            - mountPath: "/etc/sawtooth"
              name: sawtooth-etc
            - mountPath: "/var/lib/sawtooth"
              name: sawtooth-data
          command: [ "bash", "-xc" ]
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          args: 
            - |
              mkdir -p /etc/sawtooth/data
              mkdir -p /etc/sawtooth/genesis
              mkdir -p /etc/sawtooth/keys
              if [ ! -r /etc/sawtooth/keys/validator.priv ]; then
                sawadm keygen --force
              fi 
              ETCD_URL=http://etcd.{{.sawtooth.namespace}}:2379
              etcdctl --endpoint $ETCD_URL ls 
              EXIT=$?
              while [ $EXIT -ne 0 ]; do
                sleep 5
                etcdctl --endpoint $ETCD_URL ls 2>/dev/null
                EXIT=$?
              done
              etcdctl --endpoint $ETCD_URL set validator/$NODE_NAME/pubKey $(cat /etc/sawtooth/keys/validator.pub)
              # echo 'opentsdb_url = "http://influxdb.{{.sawtooth.namespace}}:8086"'>/etc/sawtooth/validator.toml
              # echo 'opentsdb_db = "metrics"'>>/etc/sawtooth/validator.toml
              # echo 'opentsdb_username  = "lrdata"'>>/etc/sawtooth/validator.toml
              # echo 'opentsdb_password  = "lrdata"'>>/etc/sawtooth/validator.toml
        {{ if .sawtooth.genesis.enabled }}
          {{ if eq .sawtooth.consensus 200 }}
        - name: poet-registration
          image: {{.images.poet_cli}}
          command: [ "bash", "-xc" ]
          args:
          - |
            mkdir -p /sawtooth-etc/poet
            cp /etc/sawtooth/simulator_rk_pub.pem /sawtooth-etc/;
            if [ ! -f /sawtooth-etc/poet/poet-enclave-measurement ]; then 
              poet enclave measurement > /sawtooth-etc/poet/poet-enclave-measurement; 
            fi 
            if [ ! -f /sawtooth-etc/poet/poet-enclave-basename ]; then 
              poet enclave basename > /sawtooth-etc/poet/poet-enclave-basename; 
            fi 
            poet registration create --enclave-module simulator \
                  -k /sawtooth-etc/keys/validator.priv \
                  -o /sawtooth-etc/genesis/200.poet.batch
          volumeMounts:
            - mountPath: "/sawtooth-etc"
              name: sawtooth-etc
          {{ end }}
        - name: genesis
          image: {{.images.validator}}
          command: [ "bash", "-xc" ]
          args:
          - |
            env
          {{ if eq .sawtooth.consensus 400 }}
            bash /usr/local/bin/pbft_genesis_config.sh ${POD_NAMESPACE}
          {{ else if eq .sawtooth.consensus 300 }}
            bash /usr/local/bin/raft_genesis_config.sh
          {{ else if eq .sawtooth.consensus 200 }}
            sawset proposal create -k /etc/sawtooth/keys/validator.priv \
              sawtooth.consensus.algorithm=poet \
              sawtooth.consensus.algorithm.name=PoET \
              sawtooth.consensus.algorithm.version=0.1 \
              sawtooth.poet.report_public_key_pem="$(cat /etc/sawtooth/simulator_rk_pub.pem)" \
              sawtooth.poet.valid_enclave_measurements=$(cat /etc/sawtooth/poet/poet-enclave-measurement) \
              sawtooth.poet.valid_enclave_basenames=$(cat /etc/sawtooth/poet/poet-enclave-basename) \
              sawtooth.poet.target_wait_time=15 \
              sawtooth.poet.initial_wait_time=15 \
              sawtooth.publisher.max_batches_per_block=200 \
              sawtooth.poet.key_block_claim_limit=100000 \
              sawtooth.poet.ztest_minimum_win_count=100000 \
              -o /etc/sawtooth/genesis/100-config.batch; 
          {{ else }}
            bash /usr/local/bin/devmode_genesis_config.sh
          {{ end }}
            ETCD_URL=http://etcd.{{.sawtooth.namespace}}:2379
          {{ if .sawtooth.permissioned }}
            /usr/local/bin/identity_genesis_config.sh
          {{ end }}
            if [ ! -r /etc/sawtooth/initialized ]; then
              genesis_pod=$( for n in $( kubectl --namespace ${POD_NAMESPACE} get pod \
                            -l app={{.sawtooth.networkName}}-validator -o jsonpath='{ $.items[*].metadata.name }'); \
                            do echo $n; done|sort |head -1 )
              if [ "${POD_NAME}" = "${genesis_pod}" ]; then
                sawset genesis -k /etc/sawtooth/keys/validator.priv -o /etc/sawtooth/genesis/000-genesis.batch ;
                cd /etc/sawtooth/genesis
                sawadm genesis `ls |sort`
                cd -
              else
                sleep 120
              fi
              touch /etc/sawtooth/initialized;
            fi
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - mountPath: "/etc/sawtooth"
              name: sawtooth-etc
            - mountPath: "/var/lib/sawtooth"
              name: sawtooth-data
        {{ end }}
      volumes:
        - name: sawtooth-etc
          emptyDir: {}
        - name: sawtooth-data
          emptyDir: {}
---

